/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

/**
 *
 * @author eyador
 */
 class My_Math {
     private int number;
     
     My_Math(int number) {
         this.number = number;
     }
     
     void set_number(int number)
     {
         this.number = number;
     }
     
     int get_number()
     {
         return this.number;
     }
     
     double pow (double base, int n){
         assert n >= 0;
         double result=1;
         
         for(int i=0; i<n; i++)
         {
             result=result*base;
         }
         
         return result;
     }
     
     double root(double x, int ... n)
        {
            assert n.length <= 1;
            
            double rt_precision;
            double root = 1.0;
            double p_modifier = 1;
            int p_check = 0;
            int loopcount = 0;
            int root_degree = 2;
            
            if (n.length > 0){root_degree = n[0];}
            
            rt_precision = pow(root,root_degree) - x;
            if (rt_precision < 0) rt_precision = rt_precision * -1.0;
 
            while (rt_precision > .0000000001)
            {
                if (pow(root,root_degree) > x)
                {
                    root-=p_modifier;
                    
                    switch (p_check){
                        case 1:
                            p_check = -2;
                            break;
                        case 2:
                            p_modifier = p_modifier/10;
                            p_check = -1; 
                            break;
                        default:
                            p_check = -1;  
                    }
                }
                else if (pow(root,root_degree) < x)
                {
                    root+=p_modifier;
                    
                    switch (p_check){
                        case -1:
                            p_check = 2;
                            break;
                        case -2:
                            p_modifier = p_modifier/10;
                            p_check = 1; 
                            break;
                        default:
                            p_check = 1;  
                    }
                }
                rt_precision = pow(root,root_degree) - x;
                if (rt_precision < 0) rt_precision = rt_precision * -1.0;
                loopcount += 1;
                if (loopcount > 1000000) return (-1.0); 
            }
            System.out.println(loopcount);
            return root;
        }
}

class Your_Math extends My_Math {
    int integer;
    Your_Math(int number, int integer){
        super(number);
        this.integer = integer;
    }
    
    double pow (double base, int n){
         assert n >= 0;
         double result=1;
         
         for(int i=0; i<n; i++)
         {
             result=result*base;
         }
         
         return result/10;
     }
}

public class JavaApplication1 {
    
    public static void main(String[] args) {
        double number = 2;
        int integer = 3;

        Your_Math mathobj = new Your_Math(integer, integer);
        System.out.println("The " + integer + " root of " + number + " is: " + mathobj.root(number,integer));
        System.out.println("The number " + number + " to the " + integer + " power is: " + mathobj.pow(number,integer));
    }
    
}
